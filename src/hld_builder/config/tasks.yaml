
hld_content_generation_task:
  output_file: output/hld_crew_output.txt
  description: >
    # Objectives

    As the Learning Experience Designer, your primary task is to generate a slide-based HLD for a course.

    Your process should involve the following steps, informed by the following inputs:
    
    The product title: {product_title}

    The client name is: {client_name}

    The client's priorities: {client_priorities}

    The learner persona is: {learner_persona}

    The high-level learning outcomes: {learning_outcomes}

    The business goals are: {business_goals}

    The course delivery method: {course_delivery_method}

    The course modality: {course_modality}

    The course duration in hours: {course_duration_h}

    If no client name is provided, assume there's no client.

    Ensure the client's priorities are included and emphasized in the output.

    You must:

    ## Define Product Title 
    
    Use the provided title: {product_title}.

    ## Analyze Inputs and Infer Context
        
    Review the provided inputs. From these, infer:
    
    - Appropriate technical or domain prerequisites.
    - Learner motivations, goals, and challenges.
    - Real-world contexts and examples relevant to the topic.

    ## Design Microlesson Structure
        
    Determine the number and sequence of microlessons based on number of learning objectives provided. For each microlesson:
        
    - Create a concise title.
    - Outline key theoretical concepts to be introduced.
    - Include a method for learners to check their understanding (e.g., a multiple-choice question, coding prompt, or reflection).
    - Include estimated time durations for each microlesson. These should reflect realistic pacing for remote or hybrid delivery, keeping the learner persona in mind, including time for guided practice and learner interaction.

    ## Populate the Outline with Clear, Industry-Relevant Content:
        
    For each microlesson, provide a detailed overview of the key topics to be covered. These topics should be:
        
    - Directly aligned with the microlesson's learning objective.
    - Drawn from current industry practices, tools, and knowledge.
    - Selected to build progressively toward the overall module goal.
    - Use descriptive subsection names that reflect the actual content (e.g., "Model Evaluation Metrics" or "Using Git Branches"), rather than generic structural labels like "Theory".
    - Include estimated time durations for each microlesson. These estimates should reflect realistic pacing for remote or hybrid delivery, keeping the learner persona in mind, including time for guided practice and learner interaction.
    - Ensure each microlesson balances conceptual understanding and practical application, tied clearly to industry-relevant skills and tasks.
    - When creating the microlesson outline, make sure you're taking the duration of the microlesson into account. 

    ## Embed Best Practices
        
    Ensure alignment with GA's adult learning theory as outlined in "ga_learning_philosophy" and curriculum design best practices including:
    
    - Keep theory concise and actionable.
    - Make activities highly relevant and tool-aligned with tools.
    - Ensure accessibility for remote learners.
    - Never include any multiple choice questions or knowledge checks.

    ## Context

    Follow the practices found in our internal documentation found below. Each document has a unique id and title and is fenced off with XML tags.

    <ga_learning_philosophy id=1 title="General Assembly Learning Philosophy" purpose="This document outlines General Assembly's research-backed learning philosophy, focused on real-world application, learner engagement, and accessibility. It guides the design of effective, flexible learning experiences that build practical skills and independence. By aligning educators and stakeholders around shared principles, it helps ensure consistent, high-impact learning across all GA programs.">
    {doc_ga_learning_philosophy}
    </ga_learning_philosophy>

  expected_output: >
    A comprehensive module outline in JSON format, structured according to 
    the following:

    - `title`: A string. The title of the module (identical to the provided module title).
    - `about`: A string. A brief summary of the module's purpose and structure (generated based on the provided module topic).
    - `tools`: List of the software that will be used in the module. This should be a list of strings and should be identical to the tools in the input.
    - `learner_persona`: A string. The description of the target audience (identical to the provided learner persona).
    - `prerequisites`: A list of the required skills or knowledge (based on module topic and learner persona).
    - `microlessons` list (containing the following for each microlesson):
      - `title`: A string. The title of the microlesson.
      - `id`: A string. Include an id for the microlesson, starting at 1 and incrementing by 1 for each microlesson.
      - `minutes`: A string. Include the estimated time it will take to complete the microlesson in minutes.
      - `learning_objective`: A string.The exact learning objective for the microlesson as provided in the learning objectives.
      - `outline`: A list of strings.A brief outline of the key concepts that will be covered in the microlesson.
  agent: led_agent

